# -*- coding: utf-8 -*-
import unittest
from telethon import TelegramClient
import unittest
import time


# –í–æ—Ç —Å—é–¥–∞ –ê–ø–∏ –∏ –•—ç—â
api_id = int('10445218')
api_hash = "6fa8da898c1f3285adaa28c8ff5d883d"
client = TelegramClient('Airf', api_id, api_hash)


client.start()


class telegrambot_test(unittest.TestCase):
    def test_start(self):
        try:
            client.send_message('@hsemiembib211_bot', 'start')
            time.sleep(2)
            messages = client.get_messages('@hsemiembib211_bot')
            for message in client.get_messages('@hsemiembib211_bot', limit=1):
                m = message.message
            self.assertEqual(len(messages), 1)
            text = f'Airf,  \n\n–î–∞–Ω–Ω—ã–π –±–æ—Ç –∏–º–µ–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø–æ–ª–µ–∑–Ω—ã—Ö –∫–æ–º–∞–Ω–¥, –≤—Å–µ –æ–Ω–∏ –ø—Ä–∏–≤–µ–¥–µ–Ω—ã –≤ —Å–ø–∏—Å–∫–µ –Ω–∏–∂–µ! \n\n/infos - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—É–¥–µ–Ω—Ç–∞—Ö!\n\n/infot - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è—Ö\n\n/date - –¥–∞—Ç—ã –±–ª–∏–∂–∞–π—à–∏—Ö —Ä–∞–±–æ—Ç!\n\n/subject - –Ω–∞–±–æ—Ä –¥–∏—Å—Ü–∏–ø–ª–∏–Ω 21/22!\n\n/starosta - –ö—Ç–æ —è–≤–ª—è–µ—Ç—Å—è —Å—Ç–∞—Ä–æ—Å—Ç–æ–π –∏ –∫—É—Ä–∞—Ç–æ—Ä–æ–º –ë–ò–ë211'
            self.assertRegex(m, text)
        except:
            self.assertFalse(True)

    def test_infos(self):
        try:
            client.send_message('@hsemiembib211_bot', '–ê —Å –∫–µ–º —è —É—á—É—Å—å?ü§î')
            time.sleep(2)
            messages = client.get_messages('@hsemiembib211_bot')
            for message in client.get_messages('@hsemiembib211_bot', limit=1):
                m = message.message
            self.assertEqual(len(messages), 1)
            text = f'\n–ê–±–¥—É–ª–ª–∞–µ–≤ –ê—Ä–∏—Ñ\n\n–ê–±–∑–∞—Ö –ë–∞—è–Ω –ê–º–µ—Ä –ú–æ—Ö–¥ –ê–º–∏–Ω\n\n–ê–±—Ä–∞–º–µ–Ω–∫–æ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä\n\n–ê—Ä—Ö–∏–ø–æ—á–∫–∏–Ω –ê–ª–µ–∫—Å–∞–Ω–¥—Ä\n\n–ëa–ª—è—Å–Ω–∏–∫–æ–≤–∞ –ï–∫–∞—Ç–µ—Ä–∏–Ω–∞\n\n–ë–µ–ª–æ—É—Å –ê–ª–µ–∫—Å–∞–Ω–¥—Ä\n\n–í–æ—Ä–æ–Ω–æ–≤ –ê—Ä—Å–µ–Ω–∏–π\n\n–ì—É—Ä–±–∞—Ç–æ–≤–∞ –ï–ª–∏–∑–∞–≤–µ—Ç–∞\n\n–ì—É—Å–µ–≤ –ú–∞–∫—Å–∏–º\n\n–î—Ä–æ–Ω–æ–≤–∞ –ê–ª–ª–∞\n\n–ï–ª–µ—Ü–∫–∞—è –ï–ª–∏–∑–∞–≤–µ—Ç–∞\n\n–ö–∞–π–Ω–æ–≤–∞ –ú–∞—Ä–∏—è\n\n–ö–ª–µ–ø–∞—Ü–∫–∏–π –î–∞–Ω–∏–∏–ª\n\n–ö–∏–Ω—è–∫–∏–Ω –í–ª–∞–¥–∏—Å–ª–∞–≤\n\n–ö–æ–≥—É—Ç –ú–∏—Ö–∞–∏–ª\n\n–ö–æ–ª–¥—ã—à–µ–≤ –ü—ë—Ç—Ä\n\n–ö—Ä–æ—Ö–∏–Ω –ê–ª–µ–∫—Å–µ–π\n\n–ö—Ä—É—Ç–æ–Ω–æ–≥ –ú–∞–∫—Å–∏–º\n\n–ú–∏–ª–ª–µ—Ä –Ø–Ω\n\n–ü–µ–≥–∞–π –í–ª–∞–¥–∏—Å–ª–∞–≤\n\n–ü–ª–µ—à–∫–æ–≤ –ò–≤–∞–Ω\n\n–°–∞–≤–∏–Ω –î–∞–Ω–∏–∏–ª\n\n–°–µ–º–µ–Ω–µ–Ω—è –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞\n\n–¢–∞–Ω—å—á–µ–≤ –ê–ª–µ–∫—Å–µ–π\n\n–¢–∏–º–æ—à–∫–∏–Ω –ü–∞–≤–µ–ª\n\n–¢—É–º–∞–Ω–æ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä\n\n–§–∞—Ç—Ö—É—Ç–¥–∏–Ω–æ–≤ –ù–∏–∫–∏—Ç–∞ –∑–∞–º. —Å—Ç–∞—Ä–æ—Å—Ç—ã \n\n–•—Ä—É–ø–æ–≤ –ê–Ω–¥—Ä–µ–π\n\n–Ø—Ä–æ—Å–ª–∞–≤—Å–∫–∏–π –ê–ª–µ–∫—Å–∞–Ω–¥—Ä —Å—Ç–∞—Ä–æ—Å—Ç–∞ \n\n–ú–∞–º—É—Ç–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä\n'
            self.assertRegex(m, text)
        except:
            self.assertFalse(True)

    def test_subject(self):
        try:
            client.send_message('@hsemiembib211_bot', '–ú–æ–∏ –î–∏—Å—Ü–∏–ø–ª–∏–Ω—ãüìñ')
            time.sleep(2)
            messages = client.get_messages('@hsemiembib211_bot')
            for message in client.get_messages('@hsemiembib211_bot', limit=1):
                m = message.message
            self.assertEqual(len(messages), 1)
            text = f'\n–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ê–Ω–∞–ª–∏–∑\n\n–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞\n\n–ê–ª–≥–æ—Ä–∏—Ç–º–∏–∑–∞—Ü–∏—è –∏ –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ\n\n–ü—Ä–æ–µ–∫—Ç–Ω—ã–π —Å–µ–º–∏–Ω–∞—Ä –ø–æ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏\n\n–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–π –ø—Ä–∞–∫—Ç–∏–∫—É–º –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º –∏ —Å–µ—Ç–µ–π\n\n–§–∏–∑–∏–∫–∞\n\n–ò—Å—Ç–æ—Ä–∏—è'
            self.assertRegex(m, text)
        except:
            self.assertFalse(True)

    def test_date(self):
        try:
            client.send_message('@hsemiembib211_bot',
                                '–ú–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å –≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ —Å–µ—Å—Å–∏–∏?üò¥')
            time.sleep(2)
            messages = client.get_messages('@hsemiembib211_bot')
            for message in client.get_messages('@hsemiembib211_bot', limit=1):
                m = message.message
            self.assertEqual(len(messages), 1)
            text = f'\n\n–ê–ª–≥–æ—Ä–∏—Ç–º–∏–∑–∞—Ü–∏—è –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ - 20.12.21\n\n–ò—Å—Ç–æ—Ä–∏—è - 21.12.21\n\n–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ - 22.12.21\n\n–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ - 25.12.21'
            self.assertRegex(m, text)
        except:
            self.assertFalse(True)

    def test_spisok(self):
        try:
            client.send_message('@hsemiembib211_bot', 'C–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–πüßæ')
            time.sleep(2)
            messages = client.get_messages('@hsemiembib211_bot')
            for message in client.get_messages('@hsemiembib211_bot', limit=1):
                m = message.message
            self.assertEqual(len(messages), 1)
            text = f'\n–ê—Ä—Ç–∞–º–æ–Ω–æ–≤ –°–µ—Ä–≥–µ–π –Æ—Ä—å–µ–≤–∏—á - –ú–∞—Ç. –ê–Ω–∞–ª–∏–∑\n \n–ì–µ—Ä–∞—â–µ–Ω–∫–æ –õ—é–¥–º–∏–ª–∞ –ê–Ω–¥—Ä–µ–µ–≤–Ω–∞ - –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞\n \n–ö—Ä–µ—â—É–∫ –ê–ª–µ–∫—Å–µ–π –ê–Ω–¥—Ä–µ–µ–≤–∏—á - –ê–∏–ü –ª–µ–∫—Ü–∏–∏\n \n–î–µ—Ä–µ–Ω–¥—è–µ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ë–æ—Ä–∏—Å–æ–≤–∏—á - –ê–∏–ü —Å–µ–º–∏–Ω–∞—Ä\n \n–®–∞–Ω–µ–Ω–∫–æ –ê—Ä–∫–∞–¥–∏–π –ê—Ä–∫–∞–¥—å–µ–≤–∏—á - –§–∏–∑–∏–∫–∞ –õ–µ–∫—Ü–∏–∏\n \n–í–æ–ª–∫–æ–≤–∞ –ò—Ä–∏–Ω–∞ –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–Ω–∞ - –ò—Å—Ç–æ—Ä–∏—è\n \n–ì—É–∑–µ–Ω–∫–æ–≤–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –°–µ—Ä–≥–µ–µ–≤–Ω–∞ - –§–∏–∑–∏–∫–∞ –°–µ–º–∏–Ω–∞—Ä\n \n–ê–ª—å–±–∞—Ç—à–∞ –ê—Ö–º–∞–¥ –ú—É—Ö–∞–º–º–∞–¥ –•—É—Å–∞–π–Ω - –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–Ω—è—Ç–∏–µ'
            self.assertRegex(m, text)
        except:
            self.assertFalse(True)

    def test_ploshad(self):
        try:
            client.send_message('@hsemiembib211_bot',
                                '–ü–ª–æ—â–∞–¥–∫–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏–πüíª')
            time.sleep(2)
            messages = client.get_messages('@hsemiembib211_bot')
            for message in client.get_messages('@hsemiembib211_bot', limit=1):
                m = message.message
            self.assertEqual(len(messages), 1)
            text = f'\n\n–ú–∞—Ç. –ê–Ω–∞–ª–∏–∑, –§–∏–∑–∏–∫–∞ –õ–µ–∫—Ü–∏—è, –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ - MS Teams\n\n–§–∏–∑–∏–∫–∞ –°–µ–º–∏–Ω–∞—Ä - Google Meet\n\n–ê–∏–ü –õ–µ–∫—Ü–∏–∏ - Even Webinar\n\n–ê–∏–ü –°–µ–º–∏–Ω–∞—Ä - Meet Miem'
            self.assertRegex(m, text)
        except:
            self.assertFalse(True)

    def test_profile(self):
        try:
            client.send_message('@hsemiembib211_bot', '–ü—Ä–æ—Ñ–∏–ª–∏ –Ω–∞ —Å–∞–π—Ç–µ –í–®–≠üì±')
            time.sleep(2)
            messages = client.get_messages('@hsemiembib211_bot')
            for message in client.get_messages('@hsemiembib211_bot', limit=1):
                m = message.message
            self.assertEqual(len(messages), 1)
            text = f'https://www.hse.ru/ba/is/tutors'
            self.assertRegex(m, text)
        except:
            self.assertFalse(True)

    def test_again(self):
        try:
            client.send_message('@hsemiembib211_bot',
                                '–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –æ–±—Ä–∞—Ç–Ω–æ üöÄ ')
            time.sleep(2)
            messages = client.get_messages('@hsemiembib211_bot')
            for message in client.get_messages('@hsemiembib211_bot', limit=1):
                m = message.message
            self.assertEqual(len(messages), 1)
            text = f'–ò —Å–Ω–æ–≤–∞ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π, –∏ —Å–Ω–æ–≤–∞ –ø—Ä–∏–≤–µ—Ç  \n\n/infos - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—É–¥–µ–Ω—Ç–∞—Ö!\n\n/infot - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è—Ö\n\n/date - –¥–∞—Ç—ã –±–ª–∏–∂–∞–π—à–∏—Ö —Ä–∞–±–æ—Ç!\n\n/subject - –Ω–∞–±–æ—Ä –¥–∏—Å—Ü–∏–ø–ª–∏–Ω 21/22!\n\n/starosta - –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å—Å–∫–∏–µ –ª–∏—Ü–∞'
            self.assertRegex(m, text)
        except:
            self.assertFalse(True)
            
           
        
        
