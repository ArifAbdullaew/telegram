import unittest

from project import text_processing
from project import globalkey
from project import date
from project import subject
from project import infot


class projecttest(unittest.TestCase):
    main_keyboard = [
        ['–ê —Å –∫–µ–º —è —É—á—É—Å—å?ü§î'],
        ['–ú–æ–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏üë®'],
        ['–ú–æ–∏ –î–∏—Å—Ü–∏–ø–ª–∏–Ω—ãüìñ'],
        ['–ú–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å –≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ —Å–µ—Å—Å–∏–∏?üò¥'],
    ]
    
    keyboard1 = [
        ['C–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–πüßæ'],
        ['–ü–ª–æ—â–∞–¥–∫–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏–πüíª'],
        ['–ü—Ä–æ—Ñ–∏–ª–∏ –Ω–∞ —Å–∞–π—Ç–µ –í–®–≠üì±'],
    ]
    
    def test_keyboard1(self):
        self.assertNotEqual(infot(),self.keyboard1)

    def test_keyboard(self):
        self.assertEqual(globalkey(),self.main_keyboard)
        
    def test_keyboard(self):
        self.assertNotEqual(globalkey(),self.main_keyboard)
        
    def test_date(self):
        self.assertEqual(date('–ü–∏—Ü—Ü–∞'), 'error')
    
    def test_subject1(self):
        self.assertNotEqual(subject('–ü—Ä–µ–¥–º–µ—Ç'), '\n–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ê–Ω–∞–ª–∏–∑\n\n–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞\n\n–ê–ª–≥–æ—Ä–∏—Ç–º–∏–∑–∞—Ü–∏—è –∏ –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ\n\n–ü—Ä–æ–µ–∫—Ç–Ω—ã–π —Å–µ–º–∏–Ω–∞—Ä –ø–æ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏\n\n–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–π –ø—Ä–∞–∫—Ç–∏–∫—É–º –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º –∏ —Å–µ—Ç–µ–π\n\n–§–∏–∑–∏–∫–∞\n\n–ò—Å—Ç–æ—Ä–∏—è')
        
    def text_processing(self):
        self.assertEqual(text_processing('triplex'),'\n–ù—É —Ç—É—Ç –º–æ–∏ –ø–æ–ª–Ω–æ–º–æ—á–∏—è –≤—Å–µ \n —Ç—É—Ç —É–∂ –∏–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤—Å–µ ')
      

if __name__ == "__main__":
    unittest.main()
